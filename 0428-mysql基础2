1.常见的数据库软件
	oracle
	mysql
	sqlserver
	mongodb
	redis
2.mysql的安装
	yum install mysql* -y
3.mysql的服务
	mysqld  主服务
	mysql   客户端服务
4.mysql的端口
	3306
5.mysql的管理员
	root
6.mysql登陆
	mysql
	mysql -u root -p
	mysql -h 127.0.0.1 -u root -p
7.基础命令
	show databases;
	select database();
	use test;
	show tables;
	select * from ecs_goods;
8.表操作
	创建表结构
	语法：create table 表(
		列 数据类型 约束,
		列 数据类型 约束,
		...
	);
	约束
		约束
		主键
		唯一
		非空
		检查
		外键(参考)
		补充：默认值 
			列 数据类型 default 值
			如果向该列新增数据，存入表中的是新增的数据
			如果没有向该列新增数据，存入表中的是默认值
	修改表结构
		alter table 表 add 列 数据类型;
		alter table 表 modify 列 数据类型 约束;
		alter table 表 drop column 列;
	删除表结构
		drop table 表;
9.SQL分类
	DDL:   create alter drop truncate
	DML:   insert update delete
	DCL:   grant  revoke
	DQL：  select
10.事务
	DML语句会触发事务的开始，开始就必须要结束
	commit;        提交数据到数据库中
	rollback;      数据库状态恢复到最后一次提交的状态
11.数据的新增
	向表中所有列新增
	语法：insert into 表 values (值1，值2.....);
	向表中指定列新增
	语法：insert into 表(列1，列2) values(值1，值2);

12.数据的修改
	语法：update 表 set 列=值 where 条件;

13.数据的删除
	truncate  DDL  删除数据不能找回
	delete    DML  删除数据可以找回
	delete语法：
		delete from 表 where 条件;
	truncate语法：
		truncate table 表;

14.数据的查询
	简单查询语法：
		select 列 from 表 where 条件;
	where 条件：
		比较
		关系
		区间
==========================================================
where 条件
	1.比较
	2.关系
	3.区间
	4.模糊查询(当信息不完整时候使用)
		like   模糊查询关键字
		_      一个字符
		%      任意个字符
		注意：模糊查询主要是和字符类型一起使用
		查询ecs_goods表中商品名称以诺基亚开头的所有信息
		select * from ecs_goods where	goods_name like '诺基亚%';
		查询ecs_goods表中商品名称以6结尾的所有信息
		select * from ecs_goods where goods_name like '%6';
		查询ecs_goods表中商品名称是6个字符的所有商品信息
		select * from ecs_goods where goods_name like '______';
	5.in(在...里面，或的关系)
		查询ecs_goods表中商品名称是KD876的或者诺基亚的所有信息
		select * from ecs_goods where goods_name in ('KD876','诺基亚');
	6.空值查询
		空是没有任何数据类型，没有任何值,不能用于比较和运算
		查询时候使用is null或者is not null
		查询ecs_goods表中suppliers_id为空的所有数据
		select * from ecs_goods where suppliers_id is null;
		查询ecs_goods表中suppliers_id非空的所有数据
		SELECT * FROM ecs_goods WHERE suppliers_id IS NOT NULL;
	7.常用函数
		upper()   大写
		lower()   小写
		round()   小数点后保留几位
		avg()     平均值
		SELECT goods_name,LOWER(goods_name) FROM ecs_goods;
		SELECT AVG(shop_price),ROUND(AVG(shop_price),2) FROM ecs_goods;
=================================================
多表查询
当一张表无法满足条件时候，使用多表查询
1.笛卡尔积
两张表不做任何关联产生的数据，造成无效数据增多，数据量成倍增加，可以通过内联查询、左联查询、右联查询来避免产生笛卡尔积
select * from ecs_goods;--33
select * from ecs_category;--14
select * from ecs_goods,ecs_category;--462
2.内联查询(连接查询)
语法:
select 列 from 表1 inner join 表2 on 表1.列=表2.列;
select 列 from 表1，表2 where 表1.列=表2.列;
关联列：
	a.名字相同
	b.作用相同
	c.主外键关系
查询商品名称是KD876的分类名称
	1.分析列
		商品名称
		分类名称
	2.分析表
		商品名称   ecs_goods
		分类名称   ecs_category
	3.关联
		select * from ecs_goods,ecs_category
		where ecs_goods.cat_id=ecs_category.cat_id;
	4.过滤
		select cat_name from ecs_goods,ecs_category
		where ecs_goods.cat_id=ecs_category.cat_id
		and goods_name='KD876';
查询商品分类名称是3G手机的商品名称？
	1.分析列
		分类名称
		商品名称
	2.分析表
		商品名称  ecs_goods
		分类名称  ecs_category
	3.关联
		select * from ecs_goods g,ecs_category c
		where g.cat_id=c.cat_id;
	4.过滤
		select g.goods_name   from ecs_goods g,ecs_category c
		where g.cat_id=c.cat_id
		and c.cat_name='3G手机';



查询商品名称以诺基亚开头的商品的分类名称
1.分析列
	商品名称
	分类名称
2.分析表
	ecs_goods
	ecs_category
3.关联
	select * from ecs_goods e1,ecs_category e2
	where e1.cat_id=e2.cat_id;
4.过滤
	select e2.cat_name from cs_goods e1,ecs_category e2
	where e1.cat_id=e2.cat_id
	and e1.goods_name like '诺基亚%';
查询分类名称以手机结尾的商品名称
select g.goods_name  from ecs_category c,ecs_goods g
where c.cat_id=g.cat_id
and c.cat_name like '%手机';
查询商品本店售价范围2000和3000之间的商品的分类名称
select  c.cat_name from ecs_goods g,ecs_category c
where g.cat_id=c.cat_id
and g.shop_price between 2000 and 3000;

SELECT  DISTINCT(c.cat_name) FROM ecs_goods g,ecs_category c
WHERE g.cat_id=c.cat_id
AND g.shop_price BETWEEN 2000 AND 3000;

补充：去重函数distinct()

--1.jpg
1.select * from test1 where department='计算机系' and place='北京';
2.update test1 set department='信息学院' where department='计算机系';
3.select  t1.no,t1.name.t2.grade,t2.courses from test1 t1,test2 t2
where t1.no=t2.no and t2.grade>=75;

--2.jpg
1.select  s.name from student s,achievement a
where s.id=a.id and a.mark>85;
2.select count(*) from achievement where mark>=90;
3.insert into achievement values(7,80);
4.update achievement set mark=87 where id=3;
5.delete from student where name='Betty';
  delete from achievement where id=6;

--4.jpg
1.select s#,grade from sc where c#='C2';
2.select sname from s where sname like 'D%';
3.
分析列：
	cname
	s#
	sname
分析表：
	cname 		c
	s# sname    s
	            sc
	select s.s#,s.sname from s,sc,c
	where s.s#=sc.s# and sc.c#=c.c#
	and c.cname='Maths';
4.select   s# from sc where c# in ('C2','C4');
================================================
导入sakila数据库
https://dev.mysql.com/doc/index-other.html
1.把下载后的sakila数据库压缩包传入linux中
2.解压sakila压缩包文件
	tar -xzvf sakila-db.tar.gz
3.进入到已经解压到的目录中
	cd sakila-db
4.登陆mysql数据库
	mysql -u root -p
5.导入sakila-schema.sql
	source sakila-schema.sql;
6.导入sakila-data.sql
	source sakila-data.sql;

问题:
	查询以C开头的国家有哪些城市?
	列：
		国家名字
		城市名字
	表：
		country
		city
	关联：
		select * from city c,country co
		where c.country_id=co.country_id;
	过滤：
		select c.city from city c,country co
		where c.country_id=co.country_id
		and co.country like 'C%';

	查询客户表中名字为MARY的所在城市?
	分析列
		名字
		城市
	分析表
		customer 
		city
		address
	关联
		select  * from city c,address a,customer cu
		where c.city_id=a.city_id
		and a.address_id=cu.address_id;
	过滤
		select  c.city from city c,address a,customer cu
		where c.city_id=a.city_id
		and a.address_id=cu.address_id
		and cu.first_name='MARY';

	查询客户名字为MARY的所在国家?
	分析列
		国家名称
		客户名字
	分析表
		city
		country
		address
		customer
	关联
		select * from country co,city c,address a,customer cu
		where c.city_id=a.city_id
		and a.address_id=cu.address_id
		and c.country_id=co.country_id;
	过滤
		select co.country from country co,city c,address a,customer cu
		where c.city_id=a.city_id
		and a.address_id=cu.address_id
		and c.country_id=co.country_id
		and cu.first_name='MARY';
		











