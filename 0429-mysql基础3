--3.png
select * from dt_pay where salary>(select avg(salary) from dt_pay);
select * from dt_pay;
truncate table dt_pay;
注意：
delete删除数据后自增序列会继续生效
truncate删除数据后自增序列会初始化

--5.bmp
select avg(english) from mark;
select m.math,c.name,c.address,c.telno  from cust c,mark m
where c.studentno=m.studentno
and c.studentno in (11,22,33,44,55);

--7.jpg
a.
查询c表中满足条件的c#
select c# from c where cn='税收基础';
查询sc表中满足c#为上面查询出来结果的s#
select s# from sc where c# in (select c# from c where cn='税收基础');
查询s表中满足s#为上面查询出来结果的学号和姓名
select s#,sn from s where s# in (select s# from sc where c# in (select c# from c where cn='税收基础'));
b.
select s# from sc where c#='C2';
select sn,sd from s where s# in (select s# from sc where c#='C2');
c.
select sn,sd from s where s# in (select s# from sc where c#!='C5');
==================================================================
分组查询
按照某种条件进行分类
1.分组函数
	max()   最大
	min() 	最小
	avg()	平均
	sum()   求和
	count() 计数
分组函数通常是和分组一起使用，也可以单独使用
查询ecs_goods表中最高最低平均本店售价是多少
select max(shop_price),min(shop_price),avg(shop_price) from ecs_goods;
查询本店售价高于平均本店售价的商品名称
select avg(shop_price) from ecs_goods;
select goods_name from ecs_goods where shop_price>(select avg(shop_price) from ecs_goods);
2.分组查询
语法：select 列 from 表 where 条件
		group by 分组条件
			having 分组后过滤条件;

分组条件:每后面跟的就是分组条件,一定不能出现一对多的情况
查询ecs_goods表中每种分类ID对应多少种商品
select cat_id,count(*) from ecs_goods group by cat_id;
查询每种分类对应多少种商品，要求显示分类名称，商品数量
select  c.cat_name,count(*)  from  ecs_goods g,ecs_category c
where g.cat_id=c.cat_id
group by c.cat_name;

having
having和where区别
having 分组后过滤，后面可以直接跟分组函数
where 分组前过滤，后面不能直接跟分组函数

查询C开头的国家,每个国家有多少个城市
select  co.country,count(c.city) from country co,city c where c.country_id=co.country_id
group by co.country
having co.country like 'C%';

查询城市数量超过50的国家名称
SELECT  co.country,COUNT(c.city) FROM country co,city c WHERE c.country_id=co.country_id
GROUP BY co.country
HAVING COUNT(c.city)>50;


查询city表中每个国家id对应多少个城市,要求显示城市数量,国家id?
select country_id,count(city) from city group by country_id;

查询每个国家有多少个城市,要求显示国家名称,城市数量?
select  co.country,count(c.city) from country co,city c where c.country_id=co.country_id
group by co.country;

查询每个城市有多少个客户,要求显示城市名称,客户数量(计算*就可以)
select  c.city,count(*)  from  city c,address a,customer cu
where c.city_id=a.city_id
and  a.address_id=cu.address_id
group by c.city;


查询C开头的国家,每个国家有多少个城市
select  co.country,count(c.city) from country co,city c where c.country_id=co.country_id
and co.country like 'C%'
group by co.country;


排序和分页
a.排序
按照某种顺序进行排列
select 列 from 表 where 条件 group by 分组条件 having 分组后过滤条件 order by 排序条件;
顺序:从小到大
	order by 列 
	order by 列 asc
逆序:从大到小
	order by 列 desc

查询ecs_goods表中所有数据按照本店售价顺序排列
select * from ecs_goods order by shop_price;
查询ecs_goods表中所有数据，按照分类id倒序排列
select * from ecs_goods order by cat_id desc;

b.分页
总语法：
select 列 from 表 where 条件 group by 分组条件 having 分组后过滤条件 order by 排序条件 limit 限制条件
查询ecs_goods表中前5行数据
select * from ecs_goods limit 5;
查询ecs_goods表中6-15行数据
select * from ecs_goods limit 5,10;

--2.png
1.select count(*) from table1;
2.select t2.家庭住址    from table1 t1,table2 t2
where t1.学生id=t2.学生id
and t1.姓名 like '张%'
and t1.性别='女'
order by t1.姓名;

--4.png
1.select xm,zkzh from tb_student where score>0 and score<5;
2.select * from tb_student where xm='张三' and score=5;
3.
select c.成绩表 from 学生表 s,成绩表 c
where s.准考证号=c.准考证号
and s.年龄 between 20 and 35
order by s.准考证号 desc;

--6.jpg
1.
create table user(
	userid int(11) primary key,
	username varchar(20) not null,
	password varchar(20) not null,
	crtime   date   not null
);
2.
insert into user values(1002,'username','password','2015-01-01');

--8.jpg
1.create table store_infomation(
	name char(20),
	sales int,
	Date  date
);
2.alter table store_infomation add Memo char(20) 
3.update store_infomation set store_name =replace(store_name,'店','分店');
alter table store_infomation rename column name to store_name;
alter table store_infomation change name store_name char(20);
4.
select store_name,avg(sales)   from store_infomation 
group by store_name,date;
5.

select  store_name,sum(sales)  from store_infomation
group by store_name
having sum(sales)>1000000;
